name: Check TOC References

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  check-toc:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Get list of changed files
      id: changed-files
      run: |
        git fetch origin ${{ github.event.pull_request.base.ref }} --depth=1
        changed_files=$(git diff --name-only origin/${{ github.event.pull_request.base.ref }} ${{ github.sha }} | grep '\.md$' || echo "")
        echo "changed_files<<EOF" >> $GITHUB_OUTPUT
        echo "$changed_files" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Check TOC references
      run: |
        if [ -z "${{ steps.changed-files.outputs.changed_files }}" ]; then
          echo "No markdown files changed."
          exit 0
        fi

        missing_files=()
        while IFS= read -r file; do
          if [ -z "$file" ]; then
            continue
          fi
          
          # Get filename only without path
          filename=$(basename "$file")
          # Get directory path
          folder=$(dirname "$file")
          toc_file="$folder/toc.yml"
          
          if [ -f "$toc_file" ]; then
            # Debug - show raw file content
            echo "TOC file contents (hex):"
            hexdump -C "$toc_file" | head
            
            # Convert to ASCII to handle potential encoding issues
            toc_content=$(iconv -f utf-8 -t ascii//TRANSLIT "$toc_file" 2>/dev/null || cat "$toc_file")
            
            # Debug - show what we're looking for
            echo "Looking for filename: $filename"
            
            # Use more reliable pattern matching
            if grep -q "href:.*$filename" "$toc_file"; then
              echo "✅ File $file is referenced in $toc_file"
              echo "Match found: $(grep -E "href:.*$filename" "$toc_file" | head -1 | tr -d '\r\n')"
            else
              missing_files+=("$file")
              echo "❌ File $file is NOT referenced in $toc_file"
              echo "Content of $toc_file:"
              cat "$toc_file"
            fi
          else
            echo "⚠️ Warning: TOC file not found in $folder"
          fi
        done <<< "${{ steps.changed-files.outputs.changed_files }}"

        if [ ${#missing_files[@]} -ne 0 ]; then
          echo "::error::The following markdown files are missing in their respective toc.yml:"
          for file in "${missing_files[@]}"; do
            echo "::error::$file"
          done
          exit 1
        else
          echo "✅ All changed markdown files are properly referenced in their respective toc.yml files."
        fi
